Hi Brook, Glad to meet you today and speak with you about this role and position. It was a pleasure knowing how it feels to work with you (and work with the team members at Thrv) through the interview, and it really resonates with me to learn about what gets you excited to work at Thrv as well! Additional information I wanted to add: I had more experience with constructing AI/Agentic solutions but have had limited experience with the database schema discovery and data profiling problems. While I was working with the JPM&#39;s AI ML team, we had SQL databases pre-determined so that our scope of work and impact is limited to just the company data. Extension to the system design solution: After taking a quick dive after our call, I realized that my approach today could have been modified with a simple change: Use a heuristic approach by checking if the tables contained typical customer data columns such as customer_id, user_id, dob, birthdate, age, addresses, contacts, etc. Once we have the top scoring tables with the matching columns, then we have identified the most likely customer information tables. Using these tables, we can then check for the unique IDs to see if these are possibly customer ids, and we can then check for numeric values useful for calculating the total lifespan or lifetime value of each individual user and aggregate the results to calculate for the average customer lifespan or average customer lifetime value. Example in python: Explore and find customer table: for table in insp.get_table_names(): columns = [col[&#39;name&#39;].lower() for col in insp.get_columns(table)] score = sum(any(k in col for k in [&quot;customer&quot;, &quot;dob&quot;, &quot;age&quot;, &quot;ltv&quot;]) for col in columns) if score &gt;= 2: candidates.append(table) Aggregate and Calculate: df = pd.read_sql(f&quot;SELECT * FROM {table} LIMIT 1000&quot;, something_like_supabase_db_connection) if &quot;dob&quot; in df.columns: df[&quot;age&quot;] = (pd.Timestamp.now() - pd.to_datetime(df[&quot;dob&quot;])).dt.days / 365 avg_age = df[&quot;age&quot;].mean() if &quot;age&quot; in df.columns else None avg_ltv = df[&quot;ltv&quot;].mean() if &quot;ltv&quot; in df.columns else None Return: 1. avg_age 2. avg_ltv Thank you again and have a wonderful afternoon, Homen Shum CafeCorner LLC | (408) 333-5386 I Hshum2018@gmail.com On Wed, Oct 22, 2025 at 8:04 PM Brook Riggio &lt; brook@thrv.com &gt; wrote: Booked by Homen Shum hshum2018@gmail.com 4083335386 LinkedIn https://www.linkedin.com/in/homen-shum Join with Google Meet Meeting link meet.google.com/sbt-hety-qor Test your setup any time before your appointment. New to Google Meet? Learn more about getting started. Join by phone (US) +1 478-308-5685 PIN: 323014828 More phone numbers Interviews (Homen Shum) Thursday Oct 23, 2025 ⋅ 2pm – 3pm (Pacific Time - Los Angeles) Booked by Homen Shum hshum2018@gmail.com 4083335386 LinkedIn https://www.linkedin.com/in/homen-shum Cancel appointment Book another appointment Powered by Google Calendar appointment scheduling . Use is subject to the Google Privacy Policy and Terms of Service . You are receiving this email because you are included on the guest list for this booked appointment. Forwarding this invitation could allow any recipient to cancel on your behalf.