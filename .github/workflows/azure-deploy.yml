name: Deploy to Azure

on:
  push:
    branches:
      - main
      - 'feature/**'
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  AZURE_RESOURCE_GROUP: rg-email-agent
  AZURE_LOCATION: eastus

jobs:
  deploy-functions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Functions dependencies
        run: |
          cd apps/functions
          npm ci

      - name: Build Functions
        run: |
          cd apps/functions
          npm run build

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure Function App settings (worker indexing)
        run: |
          az functionapp config appsettings set \
            --name ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --settings AzureWebJobsFeatureFlags=EnableWorkerIndexing

      - name: Restart Function App to apply settings
        run: |
          az functionapp restart \
            --name ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      - name: Package Functions app (zip)
        run: |
          cd apps/functions
          zip -r ../functions.zip . -x "node_modules/*" ".git/*"
          ls -lah ../functions.zip

      - name: Deploy Functions via OneDeploy (az webapp deploy with retry)
        run: |
          set -e
          APP_NAME="${{ secrets.AZURE_FUNCTION_APP_NAME }}"
          RG="${{ env.AZURE_RESOURCE_GROUP }}"
          ZIP_PATH="apps/functions.zip"
          DEPLOY_OK=0
          for attempt in 1 2 3; do
            echo "Deploy attempt #$attempt..."
            if az webapp deploy \
              --resource-group "$RG" \
              --name "$APP_NAME" \
              --src-path "$ZIP_PATH" \
              --type zip; then
              DEPLOY_OK=1
              break
            fi
            echo "Deploy failed on attempt #$attempt. Retrying in 20s..."
            sleep 20
          done
          if [ "$DEPLOY_OK" -ne 1 ]; then
            echo "ERROR: Deploy failed after 3 attempts"
            exit 1
          fi

      - name: Verify Functions discovered
        run: |
          echo "Listing discovered functions..."
          az functionapp function list \
            --name ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} -o table
          CNT=$(az functionapp function list \
            --name ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "length(@)")
          if [ "$CNT" -eq 0 ]; then
            echo "ERROR: 0 functions discovered after deployment"
            exit 1
          fi

  deploy-frontend:
    runs-on: ubuntu-latest
    env:
      FUNCTION_APP_URL: ${{ secrets.AZURE_FUNCTION_APP_URL != '' && secrets.AZURE_FUNCTION_APP_URL || format('https://{0}.azurewebsites.net', secrets.AZURE_FUNCTION_APP_NAME) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: |
          npm run build
        env:
          VITE_FUNCTIONS_BASE_URL: ${{ env.FUNCTION_APP_URL }}
          VITE_API_BASE: ${{ env.FUNCTION_APP_URL }}

      - name: Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist"
          output_location: ""
          skip_app_build: true

  configure-cors:
    runs-on: ubuntu-latest
    needs: [deploy-functions, deploy-frontend]

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure CORS
        run: |
          # Get Static Web App URL
          SWA_URL=$(az staticwebapp show \
            --name ${{ secrets.AZURE_STATIC_WEB_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --query "defaultHostname" -o tsv)

          # Add CORS origin to Function App
          az functionapp cors add \
            --name ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --allowed-origins "https://$SWA_URL"

          echo "CORS configured for https://$SWA_URL"
